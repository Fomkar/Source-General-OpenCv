// REsim kesip birle≈ütirme
#include<opencv2/opencv.hpp>
#include<opencv2/highgui/highgui.hpp>
#include<opencv2/core/core.hpp>
#include<opencv2/imgproc/imgproc.hpp>
#include<opencv2/imgcodecs/imgcodecs.hpp>
#include<stdio.h>
#include<iostream>

using namespace cv;
using namespace std;

Mat image,image2,hsv,imthresh;

int iLowH = 50;
int iHighH = 75;

int iLowS = 0;
int iHighS = 255;

int iLowV = 0;
int iHighV = 255;

int main()
{
	image = imread("resim.jpg");
	resize(image, image, Size(800, 800));
	imshow("Origin Resim", image);

	image2 = imread("resim2.jpg");
	resize(image2, image2, Size(800, 800));

	cvtColor(image, hsv, CV_BGR2HSV);
	inRange(hsv, Scalar(iLowH, iLowS, iLowV), Scalar(iHighH, iHighS, iHighV), imthresh);

	erode(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));
	dilate(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));

	dilate(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));
	erode(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));

	imshow("asama1", imthresh);

	for (int i = 0; i < image.cols; i++) 
	{
		for (int j = 0; j < image.rows; j++)
		{
			if (imthresh.at<uchar>(j, i) == 255)
			{
				image.at<Vec3b>(j, i) = 0;
			}
			if (imthresh.at<uchar>(j, i) == 0)
			{
				image2.at<Vec3b>(j, i) = 0;
			}
		}
	}


	imshow("asama2", image);
	imshow("asama3", image + image2);
	waitKey(0);
	return 0;
}