#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/core/core.hpp"
#include <iostream>

using namespace std;
using namespace cv;

Mat image, hsv, imthresh, im;



int iLowH = 56;
int iHighH = 179;

int iLowS = 98;
int iHighS = 255;

int iLowV = 0;
int iHighV = 180;



int main()
{




	char dosya[150];
	vector<cv::String> fn;
	glob("D:\\Gige-rgbSdk\\sdk\\ResimTest\\*.bmp", fn, false);

	vector<Mat> images;
	size_t count = fn.size(); //number of png files in images folder
	for (size_t i = 0; i < count; i++) {

	 images.push_back(imread(fn[i]));
	 cout << fn[i] << endl;
	
	 image = imread(fn[i]);

	 cvtColor(image, hsv, CV_BGR2HSV);
	 inRange(hsv, Scalar(iLowH, iLowS, iLowV), Scalar(iHighH, iHighS, iHighV), imthresh);

	 erode(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));
	 dilate(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(7, 7)));

	 dilate(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(7, 7)));
	 erode(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));

	 vector<vector<Point> > contours;
	 vector<Vec4i>hierarchy;

	 findContours(imthresh, contours, hierarchy, RETR_TREE, CHAIN_APPROX_SIMPLE, Point(0, 0));

	 vector<Moments> mu(contours.size());

	 for (int i = 0; i < contours.size(); i++)
	 {
		mu[i] = moments(contours[i]);
	  }
	 vector<Point2f> mc(contours.size());

	 for (int i = 0; i < contours.size(); i++)
	 {
		float mcenterx = mu[i].m10 / mu[i].m00;
		float mcentery = mu[i].m01 / mu[i].m00;
		mc[i] = Point2f((mcenterx), (mcentery));

		drawContours(image, contours, i, Scalar(255, 0, 0), 2, 8);
		circle(image, Point(mcenterx, mcentery), 3, Scalar(0, 0, 255), 3, LINE_AA, 0);
	  }

	   imshow("Ä°mage", image);
	   imshow("Merkez", imthresh);
	   waitKey(10);

	   if (waitKey(30) == 27) break;
     }


	/*
	while (true) {


		image = imread("")
	

		cvtColor(image, hsv, CV_BGR2HSV);
		inRange(hsv, Scalar(iLowH, iLowS, iLowV), Scalar(iHighH, iHighS, iHighV), imthresh);

		erode(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));
		dilate(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(7, 7)));

		dilate(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(7, 7)));
		erode(imthresh, imthresh, getStructuringElement(MORPH_ELLIPSE, Size(5, 5)));

		vector<vector<Point> > contours;
		vector<Vec4i>hierarchy;

		findContours(imthresh, contours, hierarchy, RETR_TREE, CHAIN_APPROX_SIMPLE, Point(0, 0));

		vector<Moments> mu(contours.size());

		for (int i = 0; i < contours.size(); i++)
		{
			mu[i] = moments(contours[i]);
		}
		vector<Point2f> mc(contours.size());

		for (int i = 0; i < contours.size(); i++)
		{
			float mcenterx = mu[i].m10 / mu[i].m00;
			float mcentery = mu[i].m01 / mu[i].m00;
			mc[i] = Point2f((mcenterx), (mcentery));

			drawContours(video, contours, i, Scalar(255, 0, 0), 2, 8);
			circle(video, Point(mcenterx, mcentery), 3, Scalar(0, 0, 255), 3, LINE_AA, 0);
		}

		imshow("Video", video);
		imshow("Merkez", imthresh);
		waitKey(10);

		if (waitKey(30) == 27) break;
	}


	*/
	return 0;
}
