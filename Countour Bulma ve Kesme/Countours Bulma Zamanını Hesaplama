#include<opencv2/core/core.hpp>
#include<opencv2/highgui/highgui.hpp>
#include<opencv2/imgproc/imgproc.hpp>
#include<opencv2/features2d/features2d.hpp>
#include<opencv2/imgcodecs/imgcodecs.hpp>
#include<opencv2/opencv.hpp>
#include<stdio.h>
#include<iostream>
#include<time.h>
#include "opencv2/core/core.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "iostream"
using namespace cv;
using namespace std;
int main()
{
	

	Mat image;
	image = imread("resim1.bmp", 1);
	namedWindow("Reel window", CV_WINDOW_NORMAL);
	imshow("Reel window", image);
	Mat gray;
	cvtColor(image, gray, CV_BGR2GRAY);
	threshold(gray, gray, 70, 255, THRESH_BINARY_INV); //Threshold the gray
	int largest_area = 0;
	int largest_contour_index = 0;
	Rect bounding_rect;
	//Canny(gray, gray, 121, 255, 3);
	clock_t start_time = clock();
	/// Find contours   
	vector<vector<Point> > contours;
	vector<Vec4i> hierarchy;
	RNG rng(12345);
	findContours(gray, contours, hierarchy, CV_RETR_CCOMP, CV_CHAIN_APPROX_SIMPLE, Point(0, 0));


	
	/// Draw contours
	Mat drawing = Mat::zeros(gray.size(), CV_8UC3);
	for (int i = 0; i < contours.size(); i++)
	{
		
		//  Find the area of contour
		double a = contourArea(contours[i], false);
		if (a > largest_area) {
			largest_area = a; cout << i << " area  " << a << endl;
			// Store the index of largest contour
			largest_contour_index = i;
			// Find the bounding rectangle for biggest contour
			bounding_rect = boundingRect(contours[i]);
		}
	
	}
	Scalar color = Scalar(rng.uniform(0, 255), rng.uniform(0, 255), rng.uniform(0, 255));
	drawContours(drawing, contours, largest_contour_index, color, CV_FILLED, 8, hierarchy, 0, Point());
	rectangle(drawing, bounding_rect, Scalar(0, 255, 0), 2, 8, 0);
	clock_t end_time =  clock();

	double gecen_sure = double(end_time - start_time) / CLOCKS_PER_SEC;
	printf("Gecen Süre saniye: %f", gecen_sure);
	// Görüntüden Kesme
	Mat cropped_image = image(bounding_rect);
	imshow("Kesilmis", cropped_image);


	namedWindow("Display window", CV_WINDOW_AUTOSIZE);
	imshow("Display window", drawing);
	waitKey(0);
	return 0;
}
// Burada seçtiğim görüntüde birden fazla countour buluyor ve onları boundingRect fonk siyonu ile kare içine alıyor bende onu crop(kesme) fonskiyonuna koydum içine, daha sonra
// kestim görüntüyü fakat burada en büyük Countors areayı buluyor.


